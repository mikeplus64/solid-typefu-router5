{"version":3,"file":"index.es.js","sources":["../src/context.ts","../src/components/Link.tsx","../src/components/Switch.tsx","../src/components/Router.tsx","../src/index.tsx"],"sourcesContent":["import { createContext, useContext, createMemo } from \"solid-js\";\nimport { RouterContextValue, RouteState, RouteLike } from \"./types\";\nimport { O, Any } from \"ts-toolbelt\";\nimport { Params } from \"router5/dist/types/base\";\n\nconst Context = createContext<RouterContextValue>();\n\nexport default Context;\n\nexport function requireRouter(): RouterContextValue {\n  const ctx = useContext(Context);\n  if (ctx === undefined) {\n    throw Error(\"solid-typefu-router5: No router context available\");\n  }\n  return ctx;\n}\n\nexport function useRoute(): () => O.Readonly<RouteState, Any.Key, \"deep\"> {\n  const ctx = requireRouter();\n  return () => ctx.state.route;\n}\n\nexport interface IsActiveOptions {\n  /** Whether to check if the given route is the active route, or a descendant\n   * of the active route (false by default) */\n  strictEquality?: boolean;\n  /** Whether to ignore query params (true by default) */\n  ignoreQueryParams?: boolean;\n}\n\nexport function useIsActive<Link extends RouteLike>(\n  getLink: () => { to: Link; params?: Params },\n  opts?: IsActiveOptions\n): () => boolean {\n  const ctx = requireRouter();\n  return createMemo(() => {\n    const { to, params } = getLink();\n    return ctx.router.isActive(\n      to,\n      params,\n      opts?.strictEquality,\n      opts?.ignoreQueryParams\n    );\n  });\n}\n","import { createMemo, JSX, mergeProps, splitProps, untrack } from \"solid-js\";\nimport { O } from \"ts-toolbelt\";\nimport { IsActiveOptions, requireRouter, useIsActive } from \"../context\";\nimport { RouteMeta } from \"../types\";\n\n/** See [[LinkOwnProps]] */\nexport type LinkProps<Route extends RouteMeta> = LinkOwnProps<Route> &\n  LinkDisplayProps;\n\nexport type LinkDisplayProps =\n  | ({ display: \"button\" } & LinkIntrinsicProps<\"button\">)\n  | ({ display?: undefined } & LinkIntrinsicProps<\"a\">);\n\ntype LinkIntrinsicProps<Elem extends keyof JSX.IntrinsicElements> = Omit<\n  JSX.IntrinsicElements[Elem],\n  keyof LinkOwnProps<any>\n>;\n\n/**\n * Props for making a `Link` component.\n *\n * @remarks\n *\n * You can set default values for any link props using the `defaultLinkProps`\n * option in the initial configuration.\n */\nexport type LinkOwnProps<Route extends RouteMeta> = {\n  nav?: boolean;\n  navActiveClass?: string;\n  navIsActive?: IsActiveOptions;\n  openInNewTab?: boolean;\n  children?: JSX.Element;\n  onClick?: JSX.EventHandler<HTMLElement, MouseEvent>;\n  forward?: () => void;\n  back?: () => void;\n  disabled?: boolean;\n} & LinkNav<Route>;\n\n/**\n * Navigation type supported by links\n *\n * Extends router5 to support special '@@back' and '@@forward' routes, and makes\n * it optional to supply the 'params' object when there are no params to give,\n * or they are all optional\n */\nexport type LinkNav<Route extends RouteMeta> =\n  | { to: \"@@back\" | \"@@forward\"; params?: undefined }\n  | (Route extends { name: infer Name; params: infer Params }\n      ? {\n          0: { to: Name; params?: Params };\n          1: { to: Name; params: Params };\n        }[RequiresParams<Params>]\n      : never);\n\ntype RequiresParams<Params> = keyof Params extends never\n  ? 0\n  : O.RequiredKeys<Extract<Params, object>> extends never\n  ? 0\n  : 1;\n\nexport function Link<Route extends RouteMeta>(\n  props: LinkProps<Route>\n): JSX.Element {\n  const { router: router5, config } = requireRouter();\n\n  let [linkProps, innerProps] = splitProps(props as SimpleLinkProps<Route>, [\n    \"type\",\n    \"onClick\",\n    \"classList\",\n    \"to\",\n    \"params\",\n    \"nav\",\n    \"navIsActive\",\n    \"navActiveClass\",\n    \"disabled\",\n    \"back\",\n    \"forward\",\n    \"display\",\n    \"openInNewTab\",\n  ]);\n\n  linkProps = mergeProps(\n    config.defaultLinkProps ?? defaultLinkProps,\n    {\n      back: config.back,\n      forward: config.forward,\n    },\n    linkProps\n  ) as any;\n\n  const getHref = createMemo(() => {\n    const { to, params } = linkProps;\n    if (typeof to === \"string\" && !to.startsWith(\"@@\")) {\n      try {\n        return router5.buildPath(to, params);\n      } catch (err) {\n        console.warn(\"<Link> buildPath failed:\", err);\n      }\n    }\n    return undefined;\n  });\n\n  //\n  // micro-opt: if we dont have a 'nav' prop then dont make memos for isActive\n  // and getClassList at all\n  //\n\n  const haveNavProp = untrack(() => \"nav\" in linkProps);\n\n  const isActive = !haveNavProp\n    ? alwaysInactive\n    : createMemo(() => {\n        const { to, nav, navIsActive } = linkProps;\n        if (!nav || typeof to !== \"string\") return alwaysInactive;\n        return useIsActive(() => props, navIsActive);\n      });\n\n  const getClassList = !haveNavProp\n    ? () => linkProps.classList\n    : createMemo(() => {\n        const { navActiveClass, classList } = linkProps;\n        if (typeof navActiveClass === \"string\") {\n          return mergeProps({ [navActiveClass]: isActive() }, classList);\n        }\n        return classList;\n      });\n\n  function onClick(\n    ev: MouseEvent & { target: HTMLElement; currentTarget: HTMLElement }\n  ) {\n    ev.preventDefault();\n    switch (linkProps.to) {\n      case \"@@forward\":\n        linkProps.forward?.();\n        break;\n      case \"@@back\":\n        linkProps.back?.();\n        break;\n      default:\n        router5.navigate(linkProps.to!, linkProps.params ?? {});\n        linkProps.onClick?.(ev);\n        break;\n    }\n    ev.target.blur();\n  }\n\n  return createMemo(() =>\n    linkProps.display === \"button\" ? (\n      <button\n        {...(innerProps as any)}\n        disabled={linkProps.disabled}\n        classList={getClassList()}\n        onClick={onClick}\n      />\n    ) : linkProps.to.startsWith(\"@@\") ? (\n      <button\n        {...(innerProps as any)}\n        classList={getClassList()}\n        onClick={onClick}\n      />\n    ) : (\n      <a\n        {...(innerProps as any)}\n        classList={getClassList()}\n        href={getHref()}\n        target={linkProps.openInNewTab ? \"_blank\" : undefined}\n        rel={linkProps.openInNewTab ? \"noopener noreferrer\" : undefined}\n        onClick={linkProps.openInNewTab ? undefined : onClick}\n      />\n    )\n  );\n}\n\nconst defaultLinkProps: Partial<LinkProps<any>> = {\n  navActiveClass: \"is-active\",\n  navIsActive: {\n    ignoreQueryParams: true,\n    strictEquality: false,\n  },\n};\n\nconst alwaysInactive = () => false;\n\ntype SimpleLinkProps<Route extends RouteMeta> = LinkOwnProps<Route> & {\n  display?: \"button\";\n} & LinkIntrinsicProps<\"button\" | \"a\">;\n","import {\n  createContext,\n  createMemo,\n  JSX,\n  Match,\n  Show,\n  untrack,\n  useContext,\n} from \"solid-js\";\nimport { useRoute } from \"../context\";\n\nconst MatchContext = createContext<string>(\"\");\n\nexport type MatchRouteProps = PathProps & { children: JSX.Element };\n\nexport interface ExactPathProps {\n  path: string;\n  prefix?: undefined;\n}\n\nexport interface PrefixPathProps {\n  prefix: string;\n  path?: undefined;\n}\n\n/**\n * ```ts\n * type PathProps = { path: string } | { prefix: string };\n * ```\n *\n * If [[ExactPathProps.path]] is given, then the match is exact, which means\n * that the current route name must be equal to `context.path + path` where\n * `context.path` means the current path created by other match components above\n * this one.\n *\n * If [[PrefixPathProps.prefix]] is given, then the match only requires that the\n * current route start with `context.path + prefix`.\n *\n */\nexport type PathProps = ExactPathProps | PrefixPathProps;\n\nfunction doesMatch(\n  ctx: string,\n  here: string,\n  props: PathProps\n): [string, boolean] {\n  const suffix = props.path !== undefined ? props.path : props.prefix;\n  const exact = props.path !== undefined;\n  const target = ctx !== \"\" ? `${ctx}.${suffix}` : suffix;\n  return [target, exact ? here === target : here.startsWith(target)];\n}\n\n/**\n * Not reactive on the routes being used\n *\n * Prefer this over [[Switch]] + [[MatchRoute]]\n */\nexport function SwitchRoutes(props: {\n  children: MatchRouteProps[];\n  fallback?: JSX.Element;\n}): JSX.Element {\n  const ctx = useContext(MatchContext);\n  const route = useRoute();\n  const getIndex = createMemo<undefined | [number, string]>(\n    () => {\n      const here = route().name;\n      const children = props.children;\n      for (let i = 0; i < children.length; i++) {\n        const [target, when] = doesMatch(ctx, here, children[i]);\n        if (when) return [i, target];\n      }\n      return undefined;\n    },\n    undefined,\n    {\n      equals(a, b) {\n        const same =\n          a === b || (a !== undefined && b !== undefined && a[0] === b[0]);\n        return same;\n      },\n    }\n  );\n  return untrack(() =>\n    createMemo(() => {\n      const ix = getIndex();\n      if (ix !== undefined) {\n        const [i, target] = ix;\n        return (\n          <MatchContext.Provider value={target}>\n            {props.children[i].children}\n          </MatchContext.Provider>\n        );\n      }\n      return props.fallback;\n    })\n  );\n}\n\nexport type ShowRouteProps = MatchRouteProps & { fallback?: JSX.Element };\n\n/**\n * Create a [[Show]] node against a given route.\n */\nexport function ShowRoute(props: ShowRouteProps): JSX.Element {\n  const getMatch = createGetMatch(props);\n  return () => {\n    const [target, when] = getMatch();\n    return (\n      <Show when={when} fallback={props.fallback}>\n        <MatchContext.Provider value={target}>\n          {props.children}\n        </MatchContext.Provider>\n      </Show>\n    );\n  };\n}\n\n/**\n * Create a [[Match]] node against a given route.\n */\nexport function MatchRoute(props: MatchRouteProps): JSX.Element {\n  const getMatch = createGetMatch(props);\n  return (\n    <Match when={getMatch()[1]}>\n      <MatchContext.Provider value={getMatch()[0]}>\n        {props.children}\n      </MatchContext.Provider>\n    </Match>\n  );\n}\n\nfunction createGetMatch(props: PathProps): () => [string, boolean] {\n  const route = useRoute();\n  const ctx = useContext(MatchContext);\n  return createMemo<[string, boolean], undefined>(\n    () => doesMatch(ctx, route().name, props),\n    undefined,\n    { equals: (a, b) => a !== undefined && a?.[1] === b?.[1] }\n  );\n}\n","import { useRoute } from \"context\";\nimport { createMemo, JSX, untrack } from \"solid-js\";\nimport { Any, Object, String, Union } from \"ts-toolbelt\";\nimport { RenderTreeLike, RouteMeta, RouterRenderNode } from \"../types\";\nimport { MatchRouteProps, SwitchRoutes } from \"./Switch\";\n\nexport type RSM<\n  RM extends [...RouteMeta[]],\n  Path extends string[] | string | undefined = undefined\n> = Path extends string\n  ? Object.Path<_RSM0<RM>, String.Split<Path, \".\">>\n  : Path extends string[]\n  ? Object.Path<_RSM0<RM>, Path>\n  : _RSM0<RM>;\n\ntype _RSM0<RM extends [...RouteMeta[]]> = _RSM<RM> & RouterRenderNode<{}>;\n\ntype _RSM<RM extends [...RouteMeta[]]> = Any.Compute<\n  Union.IntersectOf<\n    {\n      [K in keyof RM]: Object.P.Record<\n        Extract<RM[K], RouteMeta>[\"nameArray\"],\n        RouterRenderNode<Extract<RM[K], RouteMeta>[\"params\"]>,\n        [\"?\", \"W\"]\n      >;\n    }[number]\n  >\n>;\n\n/**\n * Given a tree of routes and render instructions for each route, return an\n * element that selects the correct renderer for the current route.\n *\n * Also supports using routes to choose how to provide props to a single\n * renderer.\n */\nexport default function RouteStateMachine<\n  T extends RenderTreeLike,\n  A extends string | string[]\n>(tree: T, _assumed?: A): JSX.Element {\n  // const owner = getOwner();\n  const route = useRoute();\n  function traverse(path: string[], node: RenderTreeLike): JSX.Element {\n    const children: MatchRouteProps[] = [];\n    const {\n      render: RenderHere = passthru,\n      fallback: RenderFallback = nofallback,\n      ...routes\n    } = node;\n    for (const key in routes) {\n      const next = [...path, key];\n      const child = routes[key]!;\n      children.push({\n        prefix: key,\n        children: () => untrack(() => traverse(next, child)),\n      });\n    }\n    return () =>\n      untrack(() => (\n        <RenderHere params={route().params as any}>\n          <SwitchRoutes\n            fallback={() => <RenderFallback params={route().params as any} />}\n            children={children}\n          />\n        </RenderHere>\n      ));\n  }\n  return untrack(() => createMemo(() => traverse([], tree)));\n}\n\nfunction nofallback() {\n  return undefined;\n}\n\nfunction passthru(props: { children?: JSX.Element; params: any }): JSX.Element {\n  return <>{props.children}</>;\n}\n","import { Route, Router as Router5 } from \"router5\";\nimport { Unsubscribe } from \"router5/dist/types/base\";\nimport { DefaultDependencies } from \"router5/dist/types/router\";\nimport { JSX, onCleanup } from \"solid-js\";\nimport { createStore, reconcile } from \"solid-js/store\";\nimport { Link, LinkNav, LinkProps } from \"./components/Link\";\nimport RouteStateMachine, { RSM } from \"./components/Router\";\nimport Context from \"./context\";\nimport {\n  ReadRoutes,\n  RenderTreeLike,\n  RouteLike,\n  RouteMeta,\n  RouterConfig,\n  RouterState,\n  RoutesLike,\n} from \"./types\";\n\nexport type { LinkNav, LinkProps } from \"./components/Link\";\nexport type { RSM } from \"./components/Router\";\nexport {\n  MatchRoute,\n  MatchRouteProps,\n  ShowRoute,\n  ShowRouteProps,\n  SwitchRoutes,\n} from \"./components/Switch\";\nexport { default as Context, useIsActive, useRoute } from \"./context\";\nexport type {\n  ParseParams,\n  ReadRoutes,\n  RenderNodeLike,\n  RenderTreeLike,\n  RouteLike,\n  RouteMeta,\n  RouteNodeLike,\n  RouterContextValue,\n  RouterFallbackRenderFn,\n  RouterRenderFn,\n  RouterRenderNode,\n  RoutesLike,\n  RouteState,\n  RouteTreeLike,\n} from \"./types\";\n\nexport interface RouterComponent<RM extends RouteMeta[]> {\n  <\n    AssumeRoute extends undefined | RM[number][\"name\" | \"nameArray\"] = undefined\n  >(props: {\n    children: RSM<RM, AssumeRoute>;\n    assume?: AssumeRoute;\n  }): JSX.Element;\n}\n\nexport interface LinkComponent<RM extends RouteMeta[]> {\n  (props: LinkProps<RM[number]>): JSX.Element;\n}\n\nexport interface SolidRouter<Deps, RM extends RouteMeta[]> {\n  Provider: (props: { children: JSX.Element }) => JSX.Element;\n  /** See [[RouteStateMachine]] */\n  Router: RouterComponent<RM>;\n  /** See [[createLink]] */\n  Link: LinkComponent<RM>;\n  navigate(link: LinkNav<RM[number]>): void;\n  router: Router5<Deps>;\n}\n\n/**\n * Create a router for use in solid-js.\n *\n * I'd recommend putting your router in its own file like './router.ts', then\n * exporting the results of this function, like\n *\n * ```ts\n * import { createRouter, Router as Router5 } from 'router5';\n * import { createSolidRouter } from 'solid-ts-router';\n *\n * const routes = [\n *   ...\n * ] as const;\n *\n * // note the \"as const\" is very important! this causes TypeScript to infer\n * // `routes` as the narrowest possible type.\n *\n * function createRouter5(routes: Route<Deps>[]): Router5 {\n *   return createRouter(...)\n * }\n *\n * function onStart(router: Router5): void {\n *   // initial redirect here\n *   ...\n * }\n *\n * export const { Provider, Link, Router } = createSolidRouter({ routes, createRouter5, onStart });\n * ```\n */\n\nexport default function createSolidRouter<\n  Routes extends RoutesLike<Deps>,\n  RM extends ReadRoutes<Routes>,\n  Deps = DefaultDependencies\n>(config: RouterConfig<Deps, Routes, RM>): SolidRouter<Deps, RM> {\n  let router: Router5<Deps>;\n  let unsubs: Unsubscribe[];\n  const r = config.createRouter5(config.routes as any as Route<Deps>[]);\n  if (Array.isArray(r)) {\n    [router, ...unsubs] = r;\n  } else {\n    router = r;\n    unsubs = [];\n  }\n\n  return {\n    Link,\n\n    navigate: (opts: any) => {\n      switch (opts.to) {\n        case \"@@forward\":\n          config.forward?.();\n          break;\n        case \"@@back\":\n          config.back?.();\n          break;\n        default:\n          router.navigate(opts.to, opts.params ?? {});\n          break;\n      }\n    },\n\n    Router: (props: any) =>\n      RouteStateMachine(\n        props.children as RenderTreeLike,\n        props.assume as RouteLike | undefined\n      ),\n\n    Provider: (props: { children: JSX.Element }): JSX.Element => {\n      const initialState = router.getState() ?? { name: \"\" };\n      const [state, setState] = createStore<RouterState>({\n        route: {\n          ...initialState,\n          nameArray: initialState.name.split(\".\"),\n        },\n        previousRoute: undefined,\n      });\n\n      router.subscribe((rs) => {\n        setState(\n          reconcile<RouterState, RouterState>(\n            {\n              previousRoute: rs.previousRoute,\n              route: { ...rs.route, nameArray: rs.route.name.split(\".\") },\n            },\n            { key: null, merge: false }\n          )\n        );\n      });\n\n      router.start();\n\n      if (typeof config.onStart === \"function\") config.onStart(router);\n\n      onCleanup(() => {\n        for (const unsub of unsubs) {\n          unsub();\n        }\n        router.stop();\n      });\n\n      return (\n        <Context.Provider value={{ state, router, config }}>\n          {props.children}\n        </Context.Provider>\n      );\n    },\n\n    router,\n  } as any;\n}\n"],"names":["Context","createContext","requireRouter","ctx","useContext","undefined","Error","useRoute","state","route","useIsActive","getLink","opts","createMemo","to","params","router","isActive","strictEquality","ignoreQueryParams","Link","props","router5","config","linkProps","innerProps","splitProps","mergeProps","defaultLinkProps","back","forward","getHref","startsWith","buildPath","err","console","warn","haveNavProp","untrack","alwaysInactive","nav","navIsActive","getClassList","classList","navActiveClass","onClick","ev","preventDefault","navigate","target","blur","display","_$spread","_$mergeProps","disabled","openInNewTab","MatchContext","doesMatch","here","suffix","path","prefix","exact","SwitchRoutes","getIndex","name","children","i","length","when","equals","a","b","same","ix","_$createComponent","fallback","ShowRoute","getMatch","createGetMatch","MatchRoute","RouteStateMachine","tree","_assumed","traverse","node","render","RenderHere","passthru","RenderFallback","nofallback","routes","key","next","child","push","createSolidRouter","unsubs","r","createRouter5","Array","isArray","Router","assume","Provider","initialState","getState","setState","createStore","nameArray","split","previousRoute","subscribe","rs","reconcile","merge","start","onStart","onCleanup","unsub","stop"],"mappings":"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"}