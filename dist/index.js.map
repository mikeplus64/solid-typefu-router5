{"version":3,"file":"index.js","sources":["../src/context.ts","../src/components/Link.tsx","../src/components/Switch.tsx","../src/components/Router.tsx","../src/index.tsx"],"sourcesContent":["import { createContext, useContext, createMemo } from \"solid-js\";\nimport { RouterContextValue, RouteState, RouteLike } from \"./types\";\n\nconst Context = createContext<RouterContextValue>();\n\nexport default Context;\n\nexport function requireRouter(): RouterContextValue {\n  const ctx = useContext(Context);\n  if (ctx === undefined) {\n    throw Error(\"solid-typefu-router5: No router context available\");\n  }\n  return ctx;\n}\n\nexport function useRoute(): () => RouteState {\n  const ctx = requireRouter();\n  return () => ctx.state.route;\n}\n\nfunction paramsEq(\n  a: undefined | Record<string, any>,\n  b: undefined | Record<string, any>\n): boolean {\n  if (a === b) return true;\n  if (a === undefined) return b === undefined;\n  if (b === undefined) return a === undefined;\n  const keysA = Object.keys(a!);\n  for (const key of keysA) if (!(key in b)) return false;\n  for (const key of keysA) if (String(a[key]) !== String(b[key])) return false;\n  return keysA.length === Object.keys(b!).length;\n}\n\nexport function useIsActive<Link extends RouteLike>(\n  link: Link,\n  params?: Record<string, any>,\n  paramsIsEqual: (\n    a: undefined | Record<string, any>,\n    b: undefined | Record<string, any>\n  ) => boolean = paramsEq\n): () => boolean {\n  const route = useRoute();\n  const getIsActiveByName = createMemo(() => isActive(route().name, link));\n  return createMemo(\n    () =>\n      getIsActiveByName() &&\n      (params === undefined || paramsIsEqual(route().params, params))\n  );\n}\n\n/**\n * Find whether 'link' is an ancestor of, or equal to, 'here'\n *\n * Maybe useful for creating your own `Link` component.\n */\nexport function isActive<Link extends RouteLike>(here: string, link: Link) {\n  return link === here || here.startsWith(link + \".\");\n}\n","import { RouteMeta } from \"../types\";\nimport { requireRouter, useIsActive } from \"../context\";\nimport { JSX, createMemo, splitProps, mergeProps } from \"solid-js\";\nimport { Object } from \"ts-toolbelt\";\n\nexport type LinkNav<Route extends RouteMeta> =\n  | { to: \"@@back\" | \"@@forward\"; params?: undefined }\n  | (Route extends { name: infer Name; params: infer Params }\n      ? {\n          0: { to: Name; params?: Params };\n          1: { to: Name; params: Params };\n        }[RequiresParams<Params>]\n      : never);\n\ntype RequiresParams<Params> = keyof Params extends never\n  ? 0\n  : Object.RequiredKeys<Extract<Params, object>> extends never\n  ? 0\n  : 1;\n\n/** Props for making a `Link` component.\n *\n * @remarks\n *\n * Only some of the props are reactive; the rest are static at the time of\n * creating the link. The reactive props available are:\n *\n * - `to`\n * - `params`\n * - `disabled`\n * - `onClick`\n * - `innerProps`\n * - `disabledProps`\n */\nexport type LinkProps<Route extends RouteMeta> = {\n  nav?: boolean;\n  navActiveClass?: string;\n  navIgnoreParams?: boolean;\n  children?: JSX.Element;\n  onClick?: (\n    ev: MouseEvent & {\n      target: HTMLElement;\n      currentTarget: HTMLElement;\n    }\n  ) => void;\n  back?: () => void;\n  forward?: () => void;\n  display?: \"button\";\n  disabled?: boolean;\n} & LinkNav<Route> &\n  Omit<JSX.IntrinsicElements[\"a\" | \"button\"], \"onClick\" | \"href\" | \"children\">;\n\nexport interface LinkConfig {\n  navActiveClass: string;\n}\n\nexport default function Link<Route extends RouteMeta>(\n  props: LinkProps<Route>\n): JSX.Element {\n  const { router: router5, config } = requireRouter();\n\n  let [linkProps, innerProps] = splitProps(props, [\n    \"type\",\n    \"onClick\",\n    \"classList\",\n    \"to\",\n    \"params\",\n    \"nav\",\n    \"navIgnoreParams\",\n    \"navActiveClass\",\n    \"disabled\",\n    \"back\",\n    \"forward\",\n    \"display\",\n  ]);\n\n  linkProps = mergeProps(\n    {\n      navActiveClass: config.navActiveClass,\n      back: config.back,\n      forward: config.forward,\n    },\n    linkProps\n  ) as any;\n\n  const isActive =\n    typeof linkProps.to === \"string\"\n      ? useIsActive(\n          linkProps.to,\n          linkProps.navIgnoreParams ? undefined : linkProps.params\n        )\n      : alwaysInactive;\n\n  const getHref: () => string | undefined = createMemo(() => {\n    if (typeof linkProps.to === \"string\" && !linkProps.to.startsWith(\"@@\")) {\n      try {\n        return router5.buildPath(linkProps.to, linkProps.params);\n      } catch (err) {\n        console.warn(\"<Link> buildPath failed:\", err);\n      }\n    }\n    return undefined;\n  });\n\n  const getClassList = createMemo(() => {\n    const cls: Record<string, any> = { ...linkProps.classList };\n    if (linkProps.nav && typeof linkProps.navActiveClass === \"string\") {\n      cls[linkProps.navActiveClass] = isActive();\n    }\n    return cls;\n  });\n\n  function onClick(\n    ev: MouseEvent & { target: HTMLElement; currentTarget: HTMLElement }\n  ) {\n    ev.preventDefault();\n    switch (linkProps.to) {\n      case \"@@forward\":\n        linkProps.forward?.();\n        break;\n      case \"@@back\":\n        linkProps.back?.();\n        break;\n      default:\n        router5.navigate(linkProps.to!, linkProps.params ?? {});\n        if (typeof linkProps.onClick === \"function\") linkProps.onClick(ev);\n        break;\n    }\n    ev.target.blur();\n  }\n\n  return createMemo(() =>\n    linkProps.display === \"button\" ? (\n      <button\n        {...(innerProps as any)}\n        disabled={linkProps.disabled}\n        classList={getClassList()}\n        onClick={onClick}\n      />\n    ) : linkProps.to.startsWith(\"@@\") ? (\n      <button\n        {...(innerProps as any)}\n        classList={getClassList()}\n        onClick={onClick}\n      />\n    ) : (\n      <a\n        {...(innerProps as any)}\n        classList={getClassList()}\n        href={getHref()}\n        onClick={onClick}\n      />\n    )\n  );\n}\n\nconst alwaysInactive = () => false;\n","import {\n  JSX,\n  createContext,\n  useContext,\n  Match,\n  Show,\n  createMemo,\n} from \"solid-js\";\nimport { useRoute } from \"../context\";\n\nconst MatchContext = createContext<string>(\"\");\n\nexport type MatchRouteProps = PathProps & { children: JSX.Element };\n\nexport interface ExactPathProps {\n  path: string;\n  prefix?: undefined;\n}\n\nexport interface PrefixPathProps {\n  prefix: string;\n  path?: undefined;\n}\n\n/**\n * ```ts\n * type PathProps = { path: string } | { prefix: string };\n * ```\n *\n * If [[ExactPathProps.path]] is given, then the match is exact, which means\n * that the current route name must be equal to `context.path + path` where\n * `context.path` means the current path created by other match components above\n * this one.\n *\n * If [[PrefixPathProps.prefix]] is given, then the match only requires that the\n * current route start with `context.path + prefix`.\n *\n */\nexport type PathProps = ExactPathProps | PrefixPathProps;\n\nfunction doesMatch(\n  ctx: string,\n  here: string,\n  props: PathProps\n): [string, boolean] {\n  const suffix = props.path !== undefined ? props.path : props.prefix;\n  const exact = props.path !== undefined;\n  const target = ctx !== \"\" ? `${ctx}.${suffix}` : suffix;\n  return [target, exact ? here === target : here.startsWith(target)];\n}\n\n/**\n * Not reactive on the routes being used\n *\n * Prefer this over [[Switch]] + [[MatchRoute]]\n */\nexport function SwitchRoutes(props: {\n  children: MatchRouteProps[];\n  fallback?: JSX.Element;\n}): JSX.Element {\n  const ctx = useContext(MatchContext);\n  const route = useRoute();\n  const getIndex = createMemo<undefined | [number, string]>(\n    () => {\n      const here = route().name;\n      const children = props.children;\n      for (let i = 0; i < children.length; i++) {\n        const [target, when] = doesMatch(ctx, here, children[i]);\n        if (when) return [i, target];\n      }\n      return undefined;\n    },\n    undefined,\n    {\n      equals(a, b) {\n        const same =\n          a === b || (a !== undefined && b !== undefined && a[0] === b[0]);\n        return same;\n      },\n    }\n  );\n  return createMemo(() => {\n    const ix = getIndex();\n    if (ix !== undefined) {\n      const [i, target] = ix;\n      return (\n        <MatchContext.Provider value={target}>\n          {props.children[i].children}\n        </MatchContext.Provider>\n      );\n    }\n    return props.fallback;\n  });\n}\n\nexport type ShowRouteProps = MatchRouteProps & { fallback?: JSX.Element };\n\n/**\n * Create a [[Show]] node against a given route.\n */\nexport function ShowRoute(props: ShowRouteProps): JSX.Element {\n  const getMatch = createGetMatch(props);\n  return () => {\n    const [target, when] = getMatch();\n    return (\n      <Show when={when} fallback={props.fallback}>\n        <MatchContext.Provider value={target}>\n          {props.children}\n        </MatchContext.Provider>\n      </Show>\n    );\n  };\n}\n\n/**\n * Create a [[Match]] node against a given route.\n */\nexport function MatchRoute(props: MatchRouteProps): JSX.Element {\n  const getMatch = createGetMatch(props);\n  return (\n    <Match when={getMatch()[1]}>\n      <MatchContext.Provider value={getMatch()[0]}>\n        {props.children}\n      </MatchContext.Provider>\n    </Match>\n  );\n}\n\nfunction createGetMatch(props: PathProps): () => [string, boolean] {\n  const route = useRoute();\n  const ctx = useContext(MatchContext);\n  return createMemo<[string, boolean]>(\n    () => doesMatch(ctx, route().name, props),\n    undefined,\n    { equals: (a, b) => a && a[1] === b[1] }\n  );\n}\n","import { useRoute } from \"context\";\nimport { JSX, untrack } from \"solid-js\";\nimport { Any, Object, Union, String } from \"ts-toolbelt\";\nimport { RouteMeta } from \"../types\";\nimport { MatchRouteProps, SwitchRoutes } from \"./Switch\";\n\n/**\n * Tells `solid-typefu-router5` how to render a node if the path leading to\n * it matches the current route name.\n */\nexport type RouterRenderNode<Params> = {\n  /** Defaults to rendering the children. */\n  render?: (props: { children?: JSX.Element; params: Params }) => JSX.Element;\n\n  /** Fallback children to use if none are available to give to [[render]]. Default: nothing */\n  fallback?: (props: { params: Params }) => JSX.Element;\n};\n\nexport type RSM<\n  RM extends [...RouteMeta[]],\n  Path extends string[] | string | undefined = undefined\n> = Path extends string\n  ? Object.Path<_RSM0<RM>, String.Split<Path, \".\">>\n  : Path extends string[]\n  ? Object.Path<_RSM0<RM>, Path>\n  : _RSM0<RM>;\n\ntype _RSM0<RM extends [...RouteMeta[]]> = _RSM<RM> &\n  RouterRenderNode<undefined>;\n\ntype _RSM<RM extends [...RouteMeta[]]> = Any.Compute<\n  Union.IntersectOf<\n    {\n      [K in keyof RM]: Object.P.Record<\n        Extract<RM[K], RouteMeta>[\"nameArray\"],\n        RouterRenderNode<Extract<RM[K], RouteMeta>[\"params\"]>,\n        [\"?\", \"W\"]\n      >;\n    }[number]\n  >\n>;\n\nexport type RenderNodeLike = RouterRenderNode<any>;\nexport type RouteNodeLike = { name: string; children?: RouteTreeLike };\nexport type RouteTreeLike = RouteNodeLike[];\nexport type RenderTreeLike = RenderNodeLike & { [k: string]: RenderTreeLike };\n\n/**\n * Given a tree of routes and render instructions for each route, return an\n * element that selects the correct renderer for the current route.\n *\n * Also supports using routes to choose how to provide props to a single\n * renderer.\n */\nexport default function RouteStateMachine<\n  T extends RenderTreeLike,\n  A extends string | string[]\n>(tree: T, _assumed?: A): JSX.Element {\n  const route = useRoute();\n  function traverse(path: string[], node: RenderTreeLike): JSX.Element {\n    const children: MatchRouteProps[] = [];\n    const {\n      render: RenderHere = passthru,\n      fallback: RenderFallback = nofallback,\n      ...routes\n    } = node;\n    for (const key in routes) {\n      const next = [...path, key];\n      const child = routes[key]!;\n      children.push({\n        prefix: key,\n        children: () => traverse(next, child),\n      });\n    }\n    return untrack(() => (\n      <RenderHere params={route().params as any}>\n        <SwitchRoutes\n          fallback={() => <RenderFallback params={route().params as any} />}\n          children={children}\n        />\n      </RenderHere>\n    ));\n  }\n  return untrack(() => traverse([], tree));\n}\n\nfunction nofallback() {\n  return undefined;\n}\n\nfunction passthru(props: { children?: JSX.Element; params: any }): JSX.Element {\n  return props.children;\n}\n","import { Route, Router as Router5 } from \"router5\";\nimport { Unsubscribe } from \"router5/dist/types/base\";\nimport { DefaultDependencies } from \"router5/dist/types/router\";\nimport { JSX, onCleanup } from \"solid-js\";\nimport { createStore, reconcile } from \"solid-js/store\";\nimport Link, { LinkNav, LinkProps } from \"./components/Link\";\nimport RouteStateMachine, { RenderTreeLike, RSM } from \"./components/Router\";\nimport Context from \"./context\";\nimport {\n  ReadRoutes,\n  RouteLike,\n  RouteMeta,\n  RouterState,\n  RoutesLike,\n} from \"./types\";\n\nexport { MatchRoute, ShowRoute, SwitchRoutes } from \"./components/Switch\";\nexport { default as Context, isActive, useIsActive, useRoute } from \"./context\";\nexport type { ParseParams, ReadRoutes } from \"./types\";\n\nexport interface RouterComponent<RM extends RouteMeta[]> {\n  <\n    AssumeRoute extends undefined | RM[number][\"name\" | \"nameArray\"] = undefined\n  >(props: {\n    children: RSM<RM, AssumeRoute>;\n    assume?: AssumeRoute;\n  }): JSX.Element;\n}\n\nexport interface LinkComponent<RM extends RouteMeta[]> {\n  (props: LinkProps<RM[number]>): JSX.Element;\n}\n\nexport interface SolidRouter<Deps, RM extends RouteMeta[]> {\n  Provider: (props: { children: JSX.Element }) => JSX.Element;\n  /** See [[RouteStateMachine]] */\n  Router: RouterComponent<RM>;\n  /** See [[createLink]] */\n  Link: LinkComponent<RM>;\n  navigate(link: LinkNav<RM[number]>): void;\n  router: Router5<Deps>;\n}\n\n/**\n * Create a router for use in solid-js.\n *\n * I'd recommend putting your router in its own file like './router.ts', then\n * exporting the results of this function, like\n *\n * ```ts\n * import { createRouter, Router as Router5 } from 'router5';\n * import { createSolidRouter } from 'solid-ts-router';\n *\n * const routes = [\n *   ...\n * ] as const;\n *\n * // note the \"as const\" is very important! this causes TypeScript to infer\n * // `routes` as the narrowest possible type.\n *\n * function createRouter5(routes: Route<Deps>[]): Router5 {\n *   return createRouter(...)\n * }\n *\n * function onStart(router: Router5): void {\n *   // initial redirect here\n *   ...\n * }\n *\n * export const { Provider, Link, Router } = createSolidRouter({ routes, createRouter5, onStart });\n * ```\n */\n\nexport default function createSolidRouter<\n  Routes extends RoutesLike<Deps>,\n  RM extends ReadRoutes<Routes>,\n  Deps = DefaultDependencies\n>(config: {\n  createRouter5: (\n    routes: Route<Deps>[]\n  ) => Router5<Deps> | [Router5<Deps>, ...Unsubscribe[]];\n  routes: Routes;\n  onStart?: (router: Router5<Deps>) => void;\n  navActiveClass?: string;\n  back?: () => void;\n  forward?: () => void;\n}): SolidRouter<Deps, RM> {\n  let router: Router5<Deps>;\n  let unsubs: Unsubscribe[];\n  const r = config.createRouter5(config.routes as any as Route<Deps>[]);\n  if (Array.isArray(r)) {\n    [router, ...unsubs] = r;\n  } else {\n    router = r;\n    unsubs = [];\n  }\n\n  return {\n    Link,\n\n    navigate: (opts: any) => {\n      switch (opts.to) {\n        case \"@@forward\":\n          config.forward?.();\n          break;\n        case \"@@back\":\n          config.back?.();\n          break;\n        default:\n          router.navigate(opts.to, opts.params ?? {});\n          break;\n      }\n    },\n\n    Router: (props: any) =>\n      RouteStateMachine(\n        props.children as RenderTreeLike,\n        props.assume as RouteLike | undefined\n      ),\n\n    Provider: (props: { children: JSX.Element }): JSX.Element => {\n      const initialState = router.getState() ?? { name: \"\" };\n      const [state, setState] = createStore<RouterState>({\n        route: {\n          ...initialState,\n          nameArray: initialState.name.split(\".\"),\n        },\n        previousRoute: undefined,\n      });\n\n      router.subscribe((rs) => {\n        setState(\n          reconcile<RouterState>(\n            {\n              previousRoute: rs.previousRoute,\n              route: { ...rs.route, nameArray: rs.route.name.split(\".\") },\n            },\n            { key: null, merge: false }\n          )\n        );\n      });\n\n      router.start();\n\n      if (typeof config.onStart === \"function\") config.onStart(router);\n\n      onCleanup(() => {\n        for (const unsub of unsubs) {\n          unsub();\n        }\n        router.stop();\n      });\n\n      return (\n        <Context.Provider value={{ state, router, config }}>\n          {props.children}\n        </Context.Provider>\n      );\n    },\n\n    router,\n  } as any;\n}\n"],"names":["Context","createContext","requireRouter","ctx","useContext","undefined","Error","useRoute","state","route","paramsEq","a","b","keysA","Object","keys","key","String","length","useIsActive","link","params","paramsIsEqual","getIsActiveByName","createMemo","isActive","name","here","startsWith","Link","props","router","router5","config","linkProps","innerProps","splitProps","mergeProps","navActiveClass","back","forward","to","navIgnoreParams","alwaysInactive","getHref","buildPath","err","console","warn","getClassList","cls","classList","nav","onClick","ev","preventDefault","navigate","target","blur","display","disabled","MatchContext","doesMatch","suffix","path","prefix","exact","SwitchRoutes","getIndex","children","i","when","equals","same","ix","fallback","ShowRoute","getMatch","createGetMatch","MatchRoute","RouteStateMachine","tree","_assumed","traverse","node","render","RenderHere","passthru","RenderFallback","nofallback","routes","next","child","push","untrack","createSolidRouter","unsubs","r","createRouter5","Array","isArray","opts","Router","assume","Provider","initialState","getState","setState","createStore","nameArray","split","previousRoute","subscribe","rs","reconcile","merge","start","onStart","onCleanup","unsub","stop"],"mappings":";;;;;;;;MAGMA,OAAO,GAAGC,qBAAa;SAIbC;AACd,QAAMC,GAAG,GAAGC,kBAAU,CAACJ,OAAD,CAAtB;;AACA,MAAIG,GAAG,KAAKE,SAAZ,EAAuB;AACrB,UAAMC,KAAK,CAAC,mDAAD,CAAX;AACD;;AACD,SAAOH,GAAP;AACD;SAEeI;AACd,QAAMJ,GAAG,GAAGD,aAAa,EAAzB;AACA,SAAO,MAAMC,GAAG,CAACK,KAAJ,CAAUC,KAAvB;AACD;;AAED,SAASC,QAAT,CACEC,CADF,EAEEC,CAFF;AAIE,MAAID,CAAC,KAAKC,CAAV,EAAa,OAAO,IAAP;AACb,MAAID,CAAC,KAAKN,SAAV,EAAqB,OAAOO,CAAC,KAAKP,SAAb;AACrB,MAAIO,CAAC,KAAKP,SAAV,EAAqB,OAAOM,CAAC,KAAKN,SAAb;AACrB,QAAMQ,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,CAAZ,CAAd;;AACA,OAAK,MAAMK,GAAX,IAAkBH,KAAlB,EAAyB,IAAI,EAAEG,GAAG,IAAIJ,CAAT,CAAJ,EAAiB,OAAO,KAAP;;AAC1C,OAAK,MAAMI,GAAX,IAAkBH,KAAlB,EAAyB,IAAII,MAAM,CAACN,CAAC,CAACK,GAAD,CAAF,CAAN,KAAmBC,MAAM,CAACL,CAAC,CAACI,GAAD,CAAF,CAA7B,EAAuC,OAAO,KAAP;;AAChE,SAAOH,KAAK,CAACK,MAAN,KAAiBJ,MAAM,CAACC,IAAP,CAAYH,CAAZ,EAAgBM,MAAxC;AACD;;SAEeC,YACdC,MACAC,QACAC,gBAGeZ;AAEf,QAAMD,KAAK,GAAGF,QAAQ,EAAtB;AACA,QAAMgB,iBAAiB,GAAGC,kBAAU,CAAC,MAAMC,QAAQ,CAAChB,KAAK,GAAGiB,IAAT,EAAeN,IAAf,CAAf,CAApC;AACA,SAAOI,kBAAU,CACf,MACED,iBAAiB,OAChBF,MAAM,KAAKhB,SAAX,IAAwBiB,aAAa,CAACb,KAAK,GAAGY,MAAT,EAAiBA,MAAjB,CADrB,CAFJ,CAAjB;AAKD;AAED;;;;;;SAKgBI,SAAiCE,MAAcP;AAC7D,SAAOA,IAAI,KAAKO,IAAT,IAAiBA,IAAI,CAACC,UAAL,CAAgBR,IAAI,GAAG,GAAvB,CAAxB;AACD;;;;SCDuBS,KACtBC;AAEA,QAAM;AAAEC,IAAAA,MAAM,EAAEC,OAAV;AAAmBC,IAAAA;AAAnB,MAA8B/B,aAAa,EAAjD;AAEA,MAAI,CAACgC,SAAD,EAAYC,UAAZ,IAA0BC,kBAAU,CAACN,KAAD,EAAQ,CAC9C,MAD8C,EAE9C,SAF8C,EAG9C,WAH8C,EAI9C,IAJ8C,EAK9C,QAL8C,EAM9C,KAN8C,EAO9C,iBAP8C,EAQ9C,gBAR8C,EAS9C,UAT8C,EAU9C,MAV8C,EAW9C,SAX8C,EAY9C,SAZ8C,CAAR,CAAxC;AAeAI,EAAAA,SAAS,GAAGG,kBAAU,CACpB;AACEC,IAAAA,cAAc,EAAEL,MAAM,CAACK,cADzB;AAEEC,IAAAA,IAAI,EAAEN,MAAM,CAACM,IAFf;AAGEC,IAAAA,OAAO,EAAEP,MAAM,CAACO;AAHlB,GADoB,EAMpBN,SANoB,CAAtB;AASA,QAAMT,QAAQ,GACZ,OAAOS,SAAS,CAACO,EAAjB,KAAwB,QAAxB,GACItB,WAAW,CACTe,SAAS,CAACO,EADD,EAETP,SAAS,CAACQ,eAAV,GAA4BrC,SAA5B,GAAwC6B,SAAS,CAACb,MAFzC,CADf,GAKIsB,cANN;AAQA,QAAMC,OAAO,GAA6BpB,kBAAU,CAAC;AACnD,QAAI,OAAOU,SAAS,CAACO,EAAjB,KAAwB,QAAxB,IAAoC,CAACP,SAAS,CAACO,EAAV,CAAab,UAAb,CAAwB,IAAxB,CAAzC,EAAwE;AACtE,UAAI;AACF,eAAOI,OAAO,CAACa,SAAR,CAAkBX,SAAS,CAACO,EAA5B,EAAgCP,SAAS,CAACb,MAA1C,CAAP;AACD,OAFD,CAEE,OAAOyB,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,IAAR,CAAa,0BAAb,EAAyCF,GAAzC;AACD;AACF;;AACD,WAAOzC,SAAP;AACD,GATmD,CAApD;AAWA,QAAM4C,YAAY,GAAGzB,kBAAU,CAAC;AAC9B,UAAM0B,GAAG,GAAwB,EAAE,GAAGhB,SAAS,CAACiB;AAAf,KAAjC;;AACA,QAAIjB,SAAS,CAACkB,GAAV,IAAiB,OAAOlB,SAAS,CAACI,cAAjB,KAAoC,QAAzD,EAAmE;AACjEY,MAAAA,GAAG,CAAChB,SAAS,CAACI,cAAX,CAAH,GAAgCb,QAAQ,EAAxC;AACD;;AACD,WAAOyB,GAAP;AACD,GAN8B,CAA/B;;AAQA,WAASG,OAAT,CACEC,EADF;;;AAGEA,IAAAA,EAAE,CAACC,cAAH;;AACA,YAAQrB,SAAS,CAACO,EAAlB;AACE,WAAK,WAAL;AACE,4CAAAP,SAAS,EAACM,OAAV;AACA;;AACF,WAAK,QAAL;AACE,0CAAAN,SAAS,EAACK,IAAV;AACA;;AACF;AACEP,QAAAA,OAAO,CAACwB,QAAR,CAAiBtB,SAAS,CAACO,EAA3B,uBAAgCP,SAAS,CAACb,MAA1C,iEAAoD,EAApD;AACA,YAAI,OAAOa,SAAS,CAACmB,OAAjB,KAA6B,UAAjC,EAA6CnB,SAAS,CAACmB,OAAV,CAAkBC,EAAlB;AAC7C;AAVJ;;AAYAA,IAAAA,EAAE,CAACG,MAAH,CAAUC,IAAV;AACD;;AAED,SAAOlC,kBAAU,CAAC,MAChBU,SAAS,CAACyB,OAAV,KAAsB,QAAtB;AAAA;;AAAA,mBAKaN,OALb;;AAAA,qBAESlB,UAFT;;AAAA;AAAA,kBAGcD,SAAS,CAAC0B,QAHxB;AAAA,mBAIeX,YAAY,EAJ3B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,SAOIf,SAAS,CAACO,EAAV,CAAab,UAAb,CAAwB,IAAxB;AAAA;;AAAA,oBAISyB,OAJT;;AAAA,sBAEKlB,UAFL;;AAAA,2CAGWc,YAAY,EAHvB;;AAAA;AAAA;AAAA;;AAAA,oBAWSI,OAXT;;AAAA,sBAQKlB,UARL;;AAAA;AAAA,mBASWc,YAAY,EATvB;AAAA,mBAUML,OAAO,EAVb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,MARW,CAAjB;AAuBD;;AAED,MAAMD,cAAc,GAAG,MAAM,KAA7B;;;;AClJA,MAAMkB,YAAY,GAAG5D,qBAAa,CAAS,EAAT,CAAlC;;AA8BA,SAAS6D,SAAT,CACE3D,GADF,EAEEwB,IAFF,EAGEG,KAHF;AAKE,QAAMiC,MAAM,GAAGjC,KAAK,CAACkC,IAAN,KAAe3D,SAAf,GAA2ByB,KAAK,CAACkC,IAAjC,GAAwClC,KAAK,CAACmC,MAA7D;AACA,QAAMC,KAAK,GAAGpC,KAAK,CAACkC,IAAN,KAAe3D,SAA7B;AACA,QAAMoD,MAAM,GAAGtD,GAAG,KAAK,EAAR,MAAgBA,OAAO4D,QAAvB,GAAkCA,MAAjD;AACA,SAAO,CAACN,MAAD,EAASS,KAAK,GAAGvC,IAAI,KAAK8B,MAAZ,GAAqB9B,IAAI,CAACC,UAAL,CAAgB6B,MAAhB,CAAnC,CAAP;AACD;AAED;;;;;;;SAKgBU,aAAarC;AAI3B,QAAM3B,GAAG,GAAGC,kBAAU,CAACyD,YAAD,CAAtB;AACA,QAAMpD,KAAK,GAAGF,QAAQ,EAAtB;AACA,QAAM6D,QAAQ,GAAG5C,kBAAU,CACzB;AACE,UAAMG,IAAI,GAAGlB,KAAK,GAAGiB,IAArB;AACA,UAAM2C,QAAQ,GAAGvC,KAAK,CAACuC,QAAvB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACnD,MAA7B,EAAqCoD,CAAC,EAAtC,EAA0C;AACxC,YAAM,CAACb,MAAD,EAASc,IAAT,IAAiBT,SAAS,CAAC3D,GAAD,EAAMwB,IAAN,EAAY0C,QAAQ,CAACC,CAAD,CAApB,CAAhC;AACA,UAAIC,IAAJ,EAAU,OAAO,CAACD,CAAD,EAAIb,MAAJ,CAAP;AACX;;AACD,WAAOpD,SAAP;AACD,GATwB,EAUzBA,SAVyB,EAWzB;AACEmE,IAAAA,MAAM,CAAC7D,CAAD,EAAIC,CAAJ;AACJ,YAAM6D,IAAI,GACR9D,CAAC,KAAKC,CAAN,IAAYD,CAAC,KAAKN,SAAN,IAAmBO,CAAC,KAAKP,SAAzB,IAAsCM,CAAC,CAAC,CAAD,CAAD,KAASC,CAAC,CAAC,CAAD,CAD9D;AAEA,aAAO6D,IAAP;AACD;;AALH,GAXyB,CAA3B;AAmBA,SAAOjD,kBAAU,CAAC;AAChB,UAAMkD,EAAE,GAAGN,QAAQ,EAAnB;;AACA,QAAIM,EAAE,KAAKrE,SAAX,EAAsB;AACpB,YAAM,CAACiE,CAAD,EAAIb,MAAJ,IAAciB,EAApB;AACA;AAAA,eACgCjB,MADhC;;AAAA;AAAA,iBAEK3B,KAAK,CAACuC,QAAN,CAAeC,CAAf,EAAkBD,QAFvB;AAAA;;AAAA;AAKD;;AACD,WAAOvC,KAAK,CAAC6C,QAAb;AACD,GAXgB,CAAjB;AAYD;AAID;;;;SAGgBC,UAAU9C;AACxB,QAAM+C,QAAQ,GAAGC,cAAc,CAAChD,KAAD,CAA/B;AACA,SAAO;AACL,UAAM,CAAC2B,MAAD,EAASc,IAAT,IAAiBM,QAAQ,EAA/B;AACA;AAAA,YACcN,IADd;;AAAA;AAAA,eAC8BzC,KAAK,CAAC6C,QADpC;AAAA;;AAAA;AAAA;AAAA,iBAEkClB,MAFlC;;AAAA;AAAA,mBAGO3B,KAAK,CAACuC,QAHb;AAAA;;AAAA;AAAA;;AAAA;AAOD,GATD;AAUD;AAED;;;;SAGgBU,WAAWjD;AACzB,QAAM+C,QAAQ,GAAGC,cAAc,CAAChD,KAAD,CAA/B;AACA;AAAA;AAAA,aACe+C,QAAQ,GAAG,CAAH,CADvB;AAAA;;AAAA;AAAA;AAAA;AAAA,iBAEkCA,QAAQ,GAAG,CAAH,CAF1C;AAAA;;AAAA;AAAA,iBAGO/C,KAAK,CAACuC,QAHb;AAAA;;AAAA;AAAA;;AAAA;AAOD;;AAED,SAASS,cAAT,CAAwBhD,KAAxB;AACE,QAAMrB,KAAK,GAAGF,QAAQ,EAAtB;AACA,QAAMJ,GAAG,GAAGC,kBAAU,CAACyD,YAAD,CAAtB;AACA,SAAOrC,kBAAU,CACf,MAAMsC,SAAS,CAAC3D,GAAD,EAAMM,KAAK,GAAGiB,IAAd,EAAoBI,KAApB,CADA,EAEfzB,SAFe,EAGf;AAAEmE,IAAAA,MAAM,EAAE,CAAC7D,CAAD,EAAIC,CAAJ,KAAUD,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,KAASC,CAAC,CAAC,CAAD;AAAnC,GAHe,CAAjB;AAKD;;ACzFD;;;;;;;;SAOwBoE,kBAGtBC,MAASC;AACT,QAAMzE,KAAK,GAAGF,QAAQ,EAAtB;;AACA,WAAS4E,QAAT,CAAkBnB,IAAlB,EAAkCoB,IAAlC;AACE,UAAMf,QAAQ,GAAsB,EAApC;AACA,UAAM;AACJgB,MAAAA,MAAM,EAAEC,UAAU,GAAGC,QADjB;AAEJZ,MAAAA,QAAQ,EAAEa,cAAc,GAAGC,UAFvB;AAGJ,SAAGC;AAHC,QAIFN,IAJJ;;AAKA,SAAK,MAAMpE,GAAX,IAAkB0E,MAAlB,EAA0B;AACxB,YAAMC,IAAI,GAAG,CAAC,GAAG3B,IAAJ,EAAUhD,GAAV,CAAb;AACA,YAAM4E,KAAK,GAAGF,MAAM,CAAC1E,GAAD,CAApB;AACAqD,MAAAA,QAAQ,CAACwB,IAAT,CAAc;AACZ5B,QAAAA,MAAM,EAAEjD,GADI;AAEZqD,QAAAA,QAAQ,EAAE,MAAMc,QAAQ,CAACQ,IAAD,EAAOC,KAAP;AAFZ,OAAd;AAID;;AACD,WAAOE,eAAO,CAAC;AAAA;AAAA,eACOrF,KAAK,GAAGY,MADf;AAAA;;AAAA;AAAA;AAAA,oBAGC;AAAA;AAAA,qBAA8BZ,KAAK,GAAGY,MAAtC;AAAA;;AAAA,YAHD;AAAA,oBAICgD;AAJD;AAAA;;AAAA,MAAD,CAAd;AAQD;;AACD,SAAOyB,eAAO,CAAC,MAAMX,QAAQ,CAAC,EAAD,EAAKF,IAAL,CAAf,CAAd;AACD;;AAED,SAASQ,UAAT;AACE,SAAOpF,SAAP;AACD;;AAED,SAASkF,QAAT,CAAkBzD,KAAlB;AACE,SAAOA,KAAK,CAACuC,QAAb;AACD;;ACjDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA8BwB0B,kBAItB9D;AAUA,MAAIF,MAAJ;AACA,MAAIiE,MAAJ;AACA,QAAMC,CAAC,GAAGhE,MAAM,CAACiE,aAAP,CAAqBjE,MAAM,CAACyD,MAA5B,CAAV;;AACA,MAAIS,KAAK,CAACC,OAAN,CAAcH,CAAd,CAAJ,EAAsB;AACpB,KAAClE,MAAD,EAAS,GAAGiE,MAAZ,IAAsBC,CAAtB;AACD,GAFD,MAEO;AACLlE,IAAAA,MAAM,GAAGkE,CAAT;AACAD,IAAAA,MAAM,GAAG,EAAT;AACD;;AAED,SAAO;AACLnE,IAAAA,IADK;AAGL2B,IAAAA,QAAQ,EAAG6C,IAAD;;;AACR,cAAQA,IAAI,CAAC5D,EAAb;AACE,aAAK,WAAL;AACE,6BAAAR,MAAM,CAACO,OAAP,yEAAAP,MAAM;AACN;;AACF,aAAK,QAAL;AACE,0BAAAA,MAAM,CAACM,IAAP,mEAAAN,MAAM;AACN;;AACF;AACEF,UAAAA,MAAM,CAACyB,QAAP,CAAgB6C,IAAI,CAAC5D,EAArB,kBAAyB4D,IAAI,CAAChF,MAA9B,uDAAwC,EAAxC;AACA;AATJ;AAWD,KAfI;AAiBLiF,IAAAA,MAAM,EAAGxE,KAAD,IACNkD,iBAAiB,CACflD,KAAK,CAACuC,QADS,EAEfvC,KAAK,CAACyE,MAFS,CAlBd;AAuBLC,IAAAA,QAAQ,EAAG1E,KAAD;;;AACR,YAAM2E,YAAY,uBAAG1E,MAAM,CAAC2E,QAAP,EAAH,+DAAwB;AAAEhF,QAAAA,IAAI,EAAE;AAAR,OAA1C;AACA,YAAM,CAAClB,KAAD,EAAQmG,QAAR,IAAoBC,iBAAW,CAAc;AACjDnG,QAAAA,KAAK,EAAE,EACL,GAAGgG,YADE;AAELI,UAAAA,SAAS,EAAEJ,YAAY,CAAC/E,IAAb,CAAkBoF,KAAlB,CAAwB,GAAxB;AAFN,SAD0C;AAKjDC,QAAAA,aAAa,EAAE1G;AALkC,OAAd,CAArC;AAQA0B,MAAAA,MAAM,CAACiF,SAAP,CAAkBC,EAAD;AACfN,QAAAA,QAAQ,CACNO,eAAS,CACP;AACEH,UAAAA,aAAa,EAAEE,EAAE,CAACF,aADpB;AAEEtG,UAAAA,KAAK,EAAE,EAAE,GAAGwG,EAAE,CAACxG,KAAR;AAAeoG,YAAAA,SAAS,EAAEI,EAAE,CAACxG,KAAH,CAASiB,IAAT,CAAcoF,KAAd,CAAoB,GAApB;AAA1B;AAFT,SADO,EAKP;AAAE9F,UAAAA,GAAG,EAAE,IAAP;AAAamG,UAAAA,KAAK,EAAE;AAApB,SALO,CADH,CAAR;AASD,OAVD;AAYApF,MAAAA,MAAM,CAACqF,KAAP;AAEA,UAAI,OAAOnF,MAAM,CAACoF,OAAd,KAA0B,UAA9B,EAA0CpF,MAAM,CAACoF,OAAP,CAAetF,MAAf;AAE1CuF,MAAAA,iBAAS,CAAC;AACR,aAAK,MAAMC,KAAX,IAAoBvB,MAApB,EAA4B;AAC1BuB,UAAAA,KAAK;AACN;;AACDxF,QAAAA,MAAM,CAACyF,IAAP;AACD,OALQ,CAAT;AAOA;AAAA,eAC2B;AAAEhH,UAAAA,KAAF;AAASuB,UAAAA,MAAT;AAAiBE,UAAAA;AAAjB,SAD3B;;AAAA;AAAA,iBAEKH,KAAK,CAACuC,QAFX;AAAA;;AAAA;AAKD,KA7DI;AA+DLtC,IAAAA;AA/DK,GAAP;AAiED;;;;;;;;;;;"}