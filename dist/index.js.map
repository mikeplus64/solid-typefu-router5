{"version":3,"file":"index.js","sources":["../src/context.ts","../src/components/Link.tsx","../src/components/Switch.tsx","../src/components/Router.tsx","../src/index.tsx"],"sourcesContent":["import { createContext, useContext, createMemo } from \"solid-js\";\nimport { RouterContextValue, RouteState, RouteLike } from \"./types\";\nimport { O, Any } from \"ts-toolbelt\";\n\nconst Context = createContext<RouterContextValue>();\n\nexport default Context;\n\nexport function requireRouter(): RouterContextValue {\n  const ctx = useContext(Context);\n  if (ctx === undefined) {\n    throw Error(\"solid-typefu-router5: No router context available\");\n  }\n  return ctx;\n}\n\nexport function useRoute(): () => O.Readonly<RouteState, Any.Key, \"deep\"> {\n  const ctx = requireRouter();\n  return () => ctx.state.route;\n}\n\nexport function paramsEq(\n  current: undefined | Record<string, any>,\n  target: undefined | Record<string, any>\n): boolean {\n  if (current === target) return true;\n  if (current === undefined) return target === undefined;\n  if (target === undefined) return current === undefined;\n  for (const key of Object.keys(target)) {\n    if (!(key in current) || current[key] !== target[key]) return false;\n  }\n  return true;\n}\n\nexport function paramsNeverEq() {\n  return false;\n}\n\nexport function useIsActive<Link extends RouteLike>(\n  getLink: () => { to: Link; params?: Record<string, any> },\n  paramsIsEqual: (\n    a: undefined | Record<string, any>,\n    b: undefined | Record<string, any>\n  ) => boolean = paramsEq\n): () => RouteActive {\n  const getRoute = useRoute();\n  return createMemo(() => {\n    const link = getLink();\n    const route = getRoute();\n    const active = isActive(route.name, link.to);\n    if (active > 0) {\n      if (paramsIsEqual(route.params, link.params)) {\n        return active | RouteActive.EqualParams;\n      }\n    }\n    return active;\n  });\n}\n\nexport enum RouteActive {\n  Inactive = 0,\n  ActiveRoutePrefix = 0b001,\n  ActiveRouteExact = 0b010,\n  EqualParams = 0b100,\n}\n\n/**\n * Find whether 'link' is an ancestor of, or equal to, 'here'\n *\n * Maybe useful for creating your own `Link` component.\n */\nexport function isActive<Link extends RouteLike>(\n  here: string,\n  link: Link\n): RouteActive {\n  if (link === here) return RouteActive.ActiveRouteExact;\n  if (here.startsWith(link + \".\")) return RouteActive.ActiveRoutePrefix;\n  return RouteActive.Inactive;\n}\n","import { RouteMeta } from \"../types\";\nimport {\n  paramsEq,\n  paramsNeverEq,\n  requireRouter,\n  RouteActive,\n  useIsActive,\n} from \"../context\";\nimport { JSX, createMemo, splitProps, mergeProps } from \"solid-js\";\nimport { O } from \"ts-toolbelt\";\n\nexport type LinkNav<Route extends RouteMeta> =\n  | { to: \"@@back\" | \"@@forward\"; params?: undefined }\n  | (Route extends { name: infer Name; params: infer Params }\n      ? {\n          0: { to: Name; params?: Params };\n          1: { to: Name; params: Params };\n        }[RequiresParams<Params>]\n      : never);\n\ntype RequiresParams<Params> = keyof Params extends never\n  ? 0\n  : O.RequiredKeys<Extract<Params, object>> extends never\n  ? 0\n  : 1;\n\n/**\n * Props for making a `Link` component.\n *\n * @remarks\n *\n * You can set default values for any link props using the `defaultLinkProps`\n * option in the initial configuration.\n */\nexport type LinkProps<Route extends RouteMeta> = O.Merge<\n  Omit<JSX.IntrinsicElements[\"a\"], \"onClick\">,\n  {\n    nav?: boolean;\n    navIgnoreParams?: boolean;\n    navActiveClassList?: (state: RouteActive) => Record<string, boolean>;\n    openInNewTab?: boolean;\n    children?: JSX.Element;\n    onClick?: (\n      ev: MouseEvent & {\n        target: HTMLElement;\n        currentTarget: HTMLElement;\n      }\n    ) => void;\n    back?: () => void;\n    forward?: () => void;\n    display?: \"button\";\n    disabled?: boolean;\n  } & LinkNav<Route>\n>;\n\nconst defaultLinkProps = {\n  navActiveClassList: (state: RouteActive): Record<string, boolean> => {\n    return {\n      link: true,\n      \"is-active\": state > 0,\n      \"is-active-prefix\":\n        (state & RouteActive.ActiveRoutePrefix) ===\n        RouteActive.ActiveRoutePrefix,\n      \"is-active-exact\":\n        (state & RouteActive.ActiveRouteExact) === RouteActive.ActiveRouteExact,\n      \"has-equal-params\":\n        (state & RouteActive.EqualParams) === RouteActive.EqualParams,\n    };\n  },\n};\n\nexport function Link<Route extends RouteMeta>(\n  props: LinkProps<Route>\n): JSX.Element {\n  const { router: router5, config } = requireRouter();\n\n  let [linkProps, innerProps] = splitProps(props, [\n    \"type\",\n    \"onClick\",\n    \"classList\",\n    \"to\",\n    \"params\",\n    \"nav\",\n    \"navIgnoreParams\",\n    \"navActiveClassList\",\n    \"disabled\",\n    \"back\",\n    \"forward\",\n    \"display\",\n    \"openInNewTab\",\n  ]);\n\n  linkProps = mergeProps(\n    config.defaultLinkProps ?? defaultLinkProps,\n    {\n      back: config.back,\n      forward: config.forward,\n    },\n    linkProps\n  ) as any;\n\n  const isActive =\n    typeof linkProps.to === \"string\"\n      ? useIsActive(\n          () => props,\n          linkProps.navIgnoreParams ? paramsNeverEq : paramsEq\n        )\n      : alwaysInactive;\n\n  const getHref: () => string | undefined = createMemo(() => {\n    if (typeof linkProps.to === \"string\" && !linkProps.to.startsWith(\"@@\")) {\n      try {\n        return router5.buildPath(linkProps.to, linkProps.params);\n      } catch (err) {\n        console.warn(\"<Link> buildPath failed:\", err);\n      }\n    }\n    return undefined;\n  });\n\n  const getClassList = createMemo(() => {\n    if (linkProps.navActiveClassList !== undefined) {\n      return mergeProps(\n        linkProps.navActiveClassList(isActive()),\n        linkProps.classList\n      );\n    }\n    return mergeProps(linkProps.classList);\n  });\n\n  function onClick(\n    ev: MouseEvent & { target: HTMLElement; currentTarget: HTMLElement }\n  ) {\n    ev.preventDefault();\n    switch (linkProps.to) {\n      case \"@@forward\":\n        linkProps.forward?.();\n        break;\n      case \"@@back\":\n        linkProps.back?.();\n        break;\n      default:\n        router5.navigate(linkProps.to!, linkProps.params ?? {});\n        if (typeof linkProps.onClick === \"function\") linkProps.onClick(ev);\n        break;\n    }\n    ev.target.blur();\n  }\n\n  return createMemo(() =>\n    linkProps.display === \"button\" ? (\n      <button\n        {...(innerProps as any)}\n        disabled={linkProps.disabled}\n        classList={getClassList()}\n        onClick={onClick}\n      />\n    ) : linkProps.to.startsWith(\"@@\") ? (\n      <button\n        {...(innerProps as any)}\n        classList={getClassList()}\n        onClick={onClick}\n      />\n    ) : (\n      <a\n        {...(innerProps as any)}\n        classList={getClassList()}\n        href={getHref()}\n        target={linkProps.openInNewTab ? \"_blank\" : undefined}\n        rel={linkProps.openInNewTab ? \"noopener noreferrer\" : undefined}\n        onClick={linkProps.openInNewTab ? undefined : onClick}\n      />\n    )\n  );\n}\n\nconst alwaysInactive = () => RouteActive.Inactive;\n","import {\n  JSX,\n  createContext,\n  useContext,\n  Match,\n  Show,\n  createMemo,\n} from \"solid-js\";\nimport { useRoute } from \"../context\";\n\nconst MatchContext = createContext<string>(\"\");\n\nexport type MatchRouteProps = PathProps & { children: JSX.Element };\n\nexport interface ExactPathProps {\n  path: string;\n  prefix?: undefined;\n}\n\nexport interface PrefixPathProps {\n  prefix: string;\n  path?: undefined;\n}\n\n/**\n * ```ts\n * type PathProps = { path: string } | { prefix: string };\n * ```\n *\n * If [[ExactPathProps.path]] is given, then the match is exact, which means\n * that the current route name must be equal to `context.path + path` where\n * `context.path` means the current path created by other match components above\n * this one.\n *\n * If [[PrefixPathProps.prefix]] is given, then the match only requires that the\n * current route start with `context.path + prefix`.\n *\n */\nexport type PathProps = ExactPathProps | PrefixPathProps;\n\nfunction doesMatch(\n  ctx: string,\n  here: string,\n  props: PathProps\n): [string, boolean] {\n  const suffix = props.path !== undefined ? props.path : props.prefix;\n  const exact = props.path !== undefined;\n  const target = ctx !== \"\" ? `${ctx}.${suffix}` : suffix;\n  return [target, exact ? here === target : here.startsWith(target)];\n}\n\n/**\n * Not reactive on the routes being used\n *\n * Prefer this over [[Switch]] + [[MatchRoute]]\n */\nexport function SwitchRoutes(props: {\n  children: MatchRouteProps[];\n  fallback?: JSX.Element;\n}): JSX.Element {\n  const ctx = useContext(MatchContext);\n  const route = useRoute();\n  const getIndex = createMemo<undefined | [number, string]>(\n    () => {\n      const here = route().name;\n      const children = props.children;\n      for (let i = 0; i < children.length; i++) {\n        const [target, when] = doesMatch(ctx, here, children[i]);\n        if (when) return [i, target];\n      }\n      return undefined;\n    },\n    undefined,\n    {\n      equals(a, b) {\n        const same =\n          a === b || (a !== undefined && b !== undefined && a[0] === b[0]);\n        return same;\n      },\n    }\n  );\n  return createMemo(() => {\n    const ix = getIndex();\n    if (ix !== undefined) {\n      const [i, target] = ix;\n      let children = props.children[i].children;\n      // the following avoids infinite loops where the reactive scope would leak\n      // outside of the memo\n      if (typeof children === \"function\") {\n        children = createMemo(children);\n      } else {\n        // XXX maybe unnecessary\n        children = createMemo(() => children);\n      }\n      return (\n        <MatchContext.Provider value={target}>{children}</MatchContext.Provider>\n      );\n    }\n    return props.fallback;\n  });\n}\n\nexport type ShowRouteProps = MatchRouteProps & { fallback?: JSX.Element };\n\n/**\n * Create a [[Show]] node against a given route.\n */\nexport function ShowRoute(props: ShowRouteProps): JSX.Element {\n  const getMatch = createGetMatch(props);\n  return () => {\n    const [target, when] = getMatch();\n    return (\n      <Show when={when} fallback={props.fallback}>\n        <MatchContext.Provider value={target}>\n          {props.children}\n        </MatchContext.Provider>\n      </Show>\n    );\n  };\n}\n\n/**\n * Create a [[Match]] node against a given route.\n */\nexport function MatchRoute(props: MatchRouteProps): JSX.Element {\n  const getMatch = createGetMatch(props);\n  return (\n    <Match when={getMatch()[1]}>\n      <MatchContext.Provider value={getMatch()[0]}>\n        {props.children}\n      </MatchContext.Provider>\n    </Match>\n  );\n}\n\nfunction createGetMatch(props: PathProps): () => [string, boolean] {\n  const route = useRoute();\n  const ctx = useContext(MatchContext);\n  return createMemo<[string, boolean], undefined>(\n    () => doesMatch(ctx, route().name, props),\n    undefined,\n    { equals: (a, b) => a !== undefined && a?.[1] === b?.[1] }\n  );\n}\n","import { useRoute } from \"context\";\nimport { createMemo, JSX } from \"solid-js\";\nimport { Any, Object, Union, String } from \"ts-toolbelt\";\nimport { RouteMeta, RouterRenderNode, RenderTreeLike } from \"../types\";\nimport { MatchRouteProps, SwitchRoutes } from \"./Switch\";\n\nexport type RSM<\n  RM extends [...RouteMeta[]],\n  Path extends string[] | string | undefined = undefined\n> = Path extends string\n  ? Object.Path<_RSM0<RM>, String.Split<Path, \".\">>\n  : Path extends string[]\n  ? Object.Path<_RSM0<RM>, Path>\n  : _RSM0<RM>;\n\ntype _RSM0<RM extends [...RouteMeta[]]> = _RSM<RM> & RouterRenderNode<{}>;\n\ntype _RSM<RM extends [...RouteMeta[]]> = Any.Compute<\n  Union.IntersectOf<\n    {\n      [K in keyof RM]: Object.P.Record<\n        Extract<RM[K], RouteMeta>[\"nameArray\"],\n        RouterRenderNode<Extract<RM[K], RouteMeta>[\"params\"]>,\n        [\"?\", \"W\"]\n      >;\n    }[number]\n  >\n>;\n\n/**\n * Given a tree of routes and render instructions for each route, return an\n * element that selects the correct renderer for the current route.\n *\n * Also supports using routes to choose how to provide props to a single\n * renderer.\n */\nexport default function RouteStateMachine<\n  T extends RenderTreeLike,\n  A extends string | string[]\n>(tree: T, _assumed?: A): JSX.Element {\n  const route = useRoute();\n  function traverse(path: string[], node: RenderTreeLike): JSX.Element {\n    const children: MatchRouteProps[] = [];\n    const {\n      render: RenderHere = passthru,\n      fallback: RenderFallback = nofallback,\n      ...routes\n    } = node;\n    for (const key in routes) {\n      const next = [...path, key];\n      const child = routes[key]!;\n      children.push({\n        prefix: key,\n        children: () => traverse(next, child),\n      });\n    }\n    return () => (\n      <RenderHere params={route().params as any}>\n        <SwitchRoutes\n          fallback={() => <RenderFallback params={route().params as any} />}\n          children={children}\n        />\n      </RenderHere>\n    );\n  }\n  return createMemo(() => traverse([], tree));\n}\n\nfunction nofallback() {\n  return undefined;\n}\n\nfunction passthru(props: { children?: JSX.Element; params: any }): JSX.Element {\n  return <>{props.children}</>;\n}\n","import { Route, Router as Router5 } from \"router5\";\nimport { Unsubscribe } from \"router5/dist/types/base\";\nimport { DefaultDependencies } from \"router5/dist/types/router\";\nimport { JSX, onCleanup } from \"solid-js\";\nimport { createStore, reconcile } from \"solid-js/store\";\nimport { Link, LinkNav, LinkProps } from \"./components/Link\";\nimport RouteStateMachine, { RSM } from \"./components/Router\";\nimport Context from \"./context\";\nimport {\n  ReadRoutes,\n  RenderTreeLike,\n  RouteLike,\n  RouteMeta,\n  RouterConfig,\n  RouterState,\n  RoutesLike,\n} from \"./types\";\n\nexport type { LinkProps, LinkNav } from \"./components/Link\";\nexport type { RSM } from \"./components/Router\";\nexport {\n  MatchRoute,\n  MatchRouteProps,\n  ShowRoute,\n  ShowRouteProps,\n  SwitchRoutes,\n} from \"./components/Switch\";\nexport {\n  default as Context,\n  isActive,\n  useIsActive,\n  useRoute,\n  RouteActive,\n} from \"./context\";\nexport type {\n  ParseParams,\n  ReadRoutes,\n  RenderNodeLike,\n  RenderTreeLike,\n  RouteLike,\n  RouteMeta,\n  RouteNodeLike,\n  RouterContextValue,\n  RouterFallbackRenderFn,\n  RouterRenderFn,\n  RouterRenderNode,\n  RoutesLike,\n  RouteState,\n  RouteTreeLike,\n} from \"./types\";\n\nexport interface RouterComponent<RM extends RouteMeta[]> {\n  <\n    AssumeRoute extends undefined | RM[number][\"name\" | \"nameArray\"] = undefined\n  >(props: {\n    children: RSM<RM, AssumeRoute>;\n    assume?: AssumeRoute;\n  }): JSX.Element;\n}\n\nexport interface LinkComponent<RM extends RouteMeta[]> {\n  (props: LinkProps<RM[number]>): JSX.Element;\n}\n\nexport interface SolidRouter<Deps, RM extends RouteMeta[]> {\n  Provider: (props: { children: JSX.Element }) => JSX.Element;\n  /** See [[RouteStateMachine]] */\n  Router: RouterComponent<RM>;\n  /** See [[createLink]] */\n  Link: LinkComponent<RM>;\n  navigate(link: LinkNav<RM[number]>): void;\n  router: Router5<Deps>;\n}\n\n/**\n * Create a router for use in solid-js.\n *\n * I'd recommend putting your router in its own file like './router.ts', then\n * exporting the results of this function, like\n *\n * ```ts\n * import { createRouter, Router as Router5 } from 'router5';\n * import { createSolidRouter } from 'solid-ts-router';\n *\n * const routes = [\n *   ...\n * ] as const;\n *\n * // note the \"as const\" is very important! this causes TypeScript to infer\n * // `routes` as the narrowest possible type.\n *\n * function createRouter5(routes: Route<Deps>[]): Router5 {\n *   return createRouter(...)\n * }\n *\n * function onStart(router: Router5): void {\n *   // initial redirect here\n *   ...\n * }\n *\n * export const { Provider, Link, Router } = createSolidRouter({ routes, createRouter5, onStart });\n * ```\n */\n\nexport default function createSolidRouter<\n  Routes extends RoutesLike<Deps>,\n  RM extends ReadRoutes<Routes>,\n  Deps = DefaultDependencies\n>(config: RouterConfig<Deps, Routes, RM>): SolidRouter<Deps, RM> {\n  let router: Router5<Deps>;\n  let unsubs: Unsubscribe[];\n  const r = config.createRouter5(config.routes as any as Route<Deps>[]);\n  if (Array.isArray(r)) {\n    [router, ...unsubs] = r;\n  } else {\n    router = r;\n    unsubs = [];\n  }\n\n  return {\n    Link,\n\n    navigate: (opts: any) => {\n      switch (opts.to) {\n        case \"@@forward\":\n          config.forward?.();\n          break;\n        case \"@@back\":\n          config.back?.();\n          break;\n        default:\n          router.navigate(opts.to, opts.params ?? {});\n          break;\n      }\n    },\n\n    Router: (props: any) =>\n      RouteStateMachine(\n        props.children as RenderTreeLike,\n        props.assume as RouteLike | undefined\n      ),\n\n    Provider: (props: { children: JSX.Element }): JSX.Element => {\n      const initialState = router.getState() ?? { name: \"\" };\n      const [state, setState] = createStore<RouterState>({\n        route: {\n          ...initialState,\n          nameArray: initialState.name.split(\".\"),\n        },\n        previousRoute: undefined,\n      });\n\n      router.subscribe((rs) => {\n        setState(\n          reconcile<RouterState, RouterState>(\n            {\n              previousRoute: rs.previousRoute,\n              route: { ...rs.route, nameArray: rs.route.name.split(\".\") },\n            },\n            { key: null, merge: false }\n          )\n        );\n      });\n\n      router.start();\n\n      if (typeof config.onStart === \"function\") config.onStart(router);\n\n      onCleanup(() => {\n        for (const unsub of unsubs) {\n          unsub();\n        }\n        router.stop();\n      });\n\n      return (\n        <Context.Provider value={{ state, router, config }}>\n          {props.children}\n        </Context.Provider>\n      );\n    },\n\n    router,\n  } as any;\n}\n"],"names":["Context","createContext","requireRouter","ctx","useContext","undefined","Error","useRoute","state","route","paramsEq","current","target","key","Object","keys","paramsNeverEq","useIsActive","getLink","paramsIsEqual","getRoute","createMemo","link","active","isActive","name","to","params","RouteActive","EqualParams","here","ActiveRouteExact","startsWith","ActiveRoutePrefix","Inactive","defaultLinkProps","navActiveClassList","Link","props","router","router5","config","linkProps","innerProps","splitProps","mergeProps","back","forward","navIgnoreParams","alwaysInactive","getHref","buildPath","err","console","warn","getClassList","classList","onClick","ev","preventDefault","navigate","blur","display","_$spread","_$effect","disabled","_$classList","_$addEventListener","openInNewTab","_$setAttribute","MatchContext","doesMatch","suffix","path","prefix","exact","SwitchRoutes","getIndex","children","i","length","when","equals","a","b","same","ix","_$createComponent","fallback","ShowRoute","getMatch","createGetMatch","Show","MatchRoute","Match","RouteStateMachine","tree","_assumed","traverse","node","render","RenderHere","passthru","RenderFallback","nofallback","routes","next","child","push","createSolidRouter","unsubs","r","createRouter5","Array","isArray","opts","Router","assume","Provider","initialState","getState","setState","createStore","nameArray","split","previousRoute","subscribe","rs","reconcile","merge","start","onStart","onCleanup","unsub","stop"],"mappings":"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"}